1.hashmap 底层实现
2.concurrenthashmap底层实现与hashtable区别，jdk1.7与1.8区别。
3.如何实现原子操作，几种方法
4.redis你们主要用来做什么，还有其他用法吗，持久化方式有哪些，分别怎么用什么时候用。
5.synchronized与lock锁是可重入的吗，都在什么场景下使用
6.斐波那契数列、冒泡排序
7.mysql主从架构配置？数据恢复方式
8.举几个cocurrent包使用了cas的类
9.cas原理是什么
10.主要做了哪些系统？
11.Threadlocal使用场景，有哪些坑？结合tomcat
12.mysql优化方法？
13.MQ使用过哪些，怎么保证消息不被重复消费，不会丢失。在MQ的哪个端实现
14.描述一下tcp三次握手四次挥手
15.Linux基本命令，查看服务器运行状态等


1.rpc框架服务高可用、容灾机制！
2.项目内部使用到的框架原理！
3.innodb和myisam引擎提供的索引类型！聚族索引。提供的锁！innodb行默认索引！
4.jvm内存模型，jvm调优经验！
5.netty（开源系统）源码研究，实现高效网络通讯的原理
6.netty是怎么解决粘包问题的，自己实现的话怎么弄
7.hashmap和currenhashmap区别
8.cas
9.synchronized做了什么优化，介绍lock锁的使用
10.线程


1、说下做过的系统比较有技术难度的功能；怎么处理数据；为什么选择这样的技术方案
丢失数据后怎么处理
2、飞行数据为什么不直接存到数据库，为什么放到redis
3、redis与memcache区别
4、redis持久化方式；memcache一致性算法
5、jvm内存模型*；内存分配；堆栈为什么内存溢出？垃圾回收算法；新生代、老年代分别用什么算法，为什么？cms垃圾回收算法原理
6、io、nio区别，netty实现原理，对nio的做了哪些封装
7、分布式系统下转账怎么保证正确性？分布式锁的方式与问题
8、hashmap原理，为什么用数组加链表？为什么用红黑树不用其它平衡树
9、线程池原理？多创建的线程怎么收回？预先创建的线程怎么知道有空闲
AQS工作原理
10、熟悉哪些设计模式？适合场景？在系统中怎么应用的？
11、如何实现合并多个线程执行结束后的结果？countdownlanch，原理？还有其它的方式吗
12、类加载原理，写了一个与系统类加载器一样的类加载会报错吗
13、内存溢出排查


1、jvm、垃圾回收
2、redis：数据结构、主从复制原理、集群方式及原理、hash数据结构实现方式
3、mysql：主从复制原理、有哪些索引、是怎样优化sql语句的、
4、MQ：kafka简单提了一下
5、tcp三次握手
6、linux常用命令
